{"version":3,"sources":["FilteredList.js","products.js","App.js","reportWebVitals.js","index.js"],"names":["FilteredList","props","addToCart","product","count","items","state","name","setState","removeFromCart","key","deleteOneItem","findTotalCost","i","productArray","Object","values","totalPrice","length","price","Math","floor","sortByPrice","products","sortMode","a","b","cost","filterProduct","filterMode","item","season","size","className","Card","style","width","Header","ListGroup","variant","ListGroupItem","action","onClick","Dropdown","Toggle","id","Menu","Item","this","filter","sort","map","border","Img","src","image","height","Body","Title","Text","Button","color","type","ButtonGroup","aria-label","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88a29eda.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport { ListGroup, ListGroupItem, ButtonGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './FilteredList.css';\nimport { Button } from '@material-ui/core';\n\nclass FilteredList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          products: this.props.products,\n          sortMode: \"unsorted\",\n          filterMode: \"unfiltered\",\n          items: {},\n        };\n    }\n      \n    /*addToCart - This method takes a product and adds a new \n    key, value pair to the items dictionary with the product name\n    as the key and the product as the value. This occurs if the key doesn't\n    already exist in the items dictionary. This method also calls this.setState\n    to update the state of the items dictionary. */\n    addToCart = product => {\n        product.count = product.count + 1;\n        const items = this.state.items;\n        items[product.name] = product;\n        this.setState({ items });\n    };\n\n    /* removeFromCart - This method takes a key and deletes the key-value\n    pair that has the same key (if it exists in the items dictionary). This \n    method also calls this.setState to update the state of the items \n    dictionary. */\n    removeFromCart = key => {\n      const items = this.state.items;\n      if (items[key]) {\n        delete items[key]\n      }\n      this.setState({ items });\n    }\n\n    \n    /* deleteOneItem - This method takes a product and first \n    checks whether there is more than one item of that product. If\n    there is, the method only decrements the count of the product by 1. \n    If there is less than 1 item of that product, the method removes the key-value\n    pair that corresponds to the product from the items dictionary. This \n    method then calls this.setState to update the state of the items \n    dictionary.  */ \n    deleteOneItem = product => {\n      const items = this.state.items;\n      if (product.count > 1) {\n        //quantity is 1 or more in shopping cart\n        product.count = product.count -1;\n      } else {\n          delete items[product.name]\n      }\n      this.setState({ items });\n    }\n\n    \n    /* findTotalCost - This method sums up the total cost in the \n    shopping cart by looping through an array that contains all the products \n    in the shopping cart. */ \n    findTotalCost = items => {\n      const productArray = Object.values(items);\n      var i;\n      var totalPrice = 0;\n\n      for (i=0; i < productArray.length; i++) {\n        totalPrice = totalPrice + productArray[i].count * productArray[i].price;\n      }\n\n      return Math.floor(totalPrice * 100) / 100;\n\n    }\n    \n    \n    /* sortByPrice - This method takes all the products and returns \n    a function that indicates how the item prices should be \n    sorted based on the sortMode. */ \n    sortByPrice = products => {\n      if (this.state.sortMode === \"lowtohigh\") {\n        return (a,b) => (a.cost > b.cost) ? 1:-1;\n      } else if (this.state.sortMode === \"hightolow\") {\n        return (a,b) => (a.cost < b.cost) ? 1:-1;\n      } else {\n        return ()=> 0;\n      }\n    }\n\n    \n    /* filterProduct - This method takes all the products and returns\n    a function that indicates how the items should be filtered based on \n    their filterMode. */ \n    filterProduct = products => {\n      if (this.state.filterMode === \"filterSpring\") {\n        return (item => item.season === \"Spring\");\n      } else if (this.state.filterMode === \"filterSummer\") {\n        return (item => item.season === \"Summer\");\n      } else if (this.state.filterMode === \"filterFall\"){\n        return (item => item.season === \"Fall\");\n      } else if (this.state.filterMode === \"filterWinter\") {\n        return (item => item.season === \"Winter\");\n      } else if (this.state.filterMode === \"filterSmall\") {\n        return (item => item.size === \"Small\");\n      } else if (this.state.filterMode === \"filterMedium\") {\n        return (item => item.size === \"Medium\");\n      } else if (this.state.filterMode === \"filterLarge\") {\n        return (item => item.size === \"Large\");\n      } else {\n        return () => this.props.products;\n      }\n    }\n\n    render() {\n        return (\n            <div>\n            <div className=\"list\">\n            <Card style={{ width: '18rem' }}>\n            <Card.Header>Filter:</Card.Header>\n            <ListGroup variant=\"flush\">\n              {/*These ListGroupItems are filter buttons (filter on either season or size)\n              that change the state's filterMode depending on what button the user clicks*/}\n            <ListGroupItem action onClick={()=> \n              this.setState({filterMode: \"filterSpring\"})}>Spring Season</ListGroupItem>\n            <ListGroupItem action onClick={()=> \n              this.setState({filterMode: \"filterSummer\"})}>Summer Season</ListGroupItem>\n            <ListGroupItem action onClick={()=> \n              this.setState({filterMode: \"filterFall\"})}>Fall Season</ListGroupItem>\n            <ListGroupItem action onClick={()=> \n              this.setState({filterMode: \"filterWinter\"})}>Winter Season</ListGroupItem>\n            <ListGroupItem action onClick={()=> \n              this.setState({filterMode: \"filterSmall\"})}>Small Size</ListGroupItem>\n            <ListGroupItem action onClick={()=> \n              this.setState({filterMode: \"filterMedium\"})}>Medium Size </ListGroupItem>\n            <ListGroupItem action onClick={()=> \n              this.setState({filterMode: \"filterLarge\"})}>Large Size</ListGroupItem>\n            <ListGroupItem action onClick={()=> \n              this.setState({filterMode: \"unfiltered\", sortMode:\"unsorted\"})}>All</ListGroupItem>\n            </ListGroup>\n            </Card>\n            </div>\n            <div className=\"dropdown\">\n            <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                  Sort by\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item>\n                    {/*This is a sort button that changes the state's sortMode to lowtohigh \n                    which essentially sorts the products by prices from low to high*/}\n                    <div onClick={()=> \n                      this.setState({sortMode: \"lowtohigh\"})}>Price: Low to High</div>\n                  </Dropdown.Item>\n                  <Dropdown.Item>\n                    {/*This is a sort button that changes the state's sortMode to hightolow \n                    which essentially sorts the products by prices from high to low*/}\n                    <div onClick={()=> \n                      this.setState({sortMode: \"hightolow\"})}>Price: High to Low</div>\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n            </div>\n            <div className=\"products\">\n              {/*Apply all the filtering and sorting before calling map to \n              display all the products on the website*/}\n              {this.state.products.filter(this.filterProduct(this.state.products)).sort(this.sortByPrice(this.state.products)).map((product) => (\n            <div className=\"item\">\n                <Card border=\"warning\" style={{ width: '18rem' }}>\n                <div className=\"item-img\">\n                <Card.Img variant=\"top\" src={product.image} width=\"286\" height=\"180\" />\n                </div>\n                <Card.Body>\n                  <Card.Title>{product.name} </Card.Title>\n                  <Card.Text>\n                  {product.cost}\n                  </Card.Text>\n                  <Card.Text>\n                  Season: {product.season}\n                  </Card.Text>\n                  <Card.Text>\n                  Size: {product.size}\n                  </Card.Text>\n                  <Button color=\"primary\" variant=\"contained\" type=\"submit\" \n                    onClick={()=>this.addToCart(product)}>Add to Cart</Button>\n                </Card.Body>\n                </Card>\n            </div>\n            ))}\n          </div>\n          {/*This is the aggregator section of the website (the shopping cart!) */}\n          <h1>Shopping Cart </h1>\n          {/*The aggregator section aggergates the total cost of the items in\n          the shopping cart */}\n          <h2>Total: ${this.findTotalCost(this.state.items)}</h2>\n          <div className=\"shopping-cart\">\n          {Object.values(this.state.items).map((item) => (\n            <div className=\"item\">\n            <Card border=\"warning\" style={{ width: '18rem' }}>\n            <div className=\"item-img\">\n            <Card.Img variant=\"top\" src={item.image} width=\"286\" height=\"180\" />\n            </div>\n            <Card.Body>\n              <Card.Title>{item.name} </Card.Title>\n              <Card.Text>\n              {item.cost}\n              </Card.Text>\n              <Card.Text>\n              Season: {item.season}\n              </Card.Text>\n              <Card.Text>\n              Size: {item.size}\n              </Card.Text>\n                <ButtonGroup aria-label=\"Basic example\">\n                  {/*These buttons allow users to remove a product (lower the quantity by 1), \n                  see the quantity of each product, and add a product (increase the quantity by 1)\n                  to the shopping cart*/}\n                  <Button variant=\"secondary\" onClick={()=>this.deleteOneItem(item)}>-</Button>\n                  <Button variant=\"secondary\">{item.count}</Button>\n                  <Button variant=\"secondary\" onClick={()=>this.addToCart(item)}>+</Button>\n                </ButtonGroup>\n                <div className=\"buttons\">\n                {/*This button removes the product altogether from the shopping cart\n                regardless of the quantity of the product in the cart */} \n                <Button color=\"primary\" variant=\"contained\" type=\"submit\"\n                  onClick={()=>this.removeFromCart(item.name)}>Remove</Button>\n                </div>\n            </Card.Body>\n            </Card>\n            </div>\n            ))}\n          </div>\n          </div>\n        )\n    }\n  \n}\n\nexport default FilteredList;","/* This is an array of all the products in the app */ \nexport default [\n\n    {\n      name: 'Tomato',\n      cost: '$5.99',\n      price: 5.99,\n      image: 'https://images.unsplash.com/photo-1524593166156-312f362cada0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=60',\n      season: 'Spring',\n      size: 'Medium',\n      count: 0,\n    }, \n    {\n      name: 'Banana',\n      cost: '$0.30',\n      price: 0.30,\n      image: 'https://images.unsplash.com/photo-1528279335935-f486951a6adf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=60',\n      season: 'Fall',\n      size: 'Medium',\n      count: 0,\n    }, \n    {\n      name: 'Blueberries',\n      cost: '$6.99',\n      price: 6.99,\n      image: 'https://images.unsplash.com/photo-1498557850523-fd3d118b962e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=60',\n      season: 'Summer',\n      size: 'Small',\n      count: 0,\n    }, \n    {\n      name: 'Peach',\n      cost: '$3.50',\n      price: 3.50,\n      image: 'https://images.unsplash.com/photo-1438274754346-45322cac87e4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=60',\n      season: 'Summer',\n      size: 'Medium',\n      count: 0,\n    }, \n    {\n      name: 'Avocado',\n      cost: '$7.99',\n      price: 7.99,\n      image: 'https://images.unsplash.com/photo-1578830610522-c0d6763f92a0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=60',\n      season: 'Winter',\n      size: 'Medium',\n      count: 0,\n    }, \n    {\n      name: 'Onion',\n      cost: '$2.99',\n      price: 2.99,\n      image: 'https://images.unsplash.com/photo-1518977956812-cd3dbadaaf31?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=60',\n      season: 'Fall',\n      size: 'Large',\n      count: 0,\n    }, \n    {\n      name: 'Pomegranate',\n      cost: '$9.99',\n      price: 9.99,\n      image: 'https://images.unsplash.com/photo-1553499944-5472133459bc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=60',\n      season: 'Fall',\n      size: 'Large',\n      count: 0,\n    }, \n    {\n      name: 'Lettuce',\n      cost: '$0.99',\n      price: 0.99,\n      image: 'https://images.unsplash.com/photo-1515356956468-873dd257f911?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=60',\n      season: 'Fall',\n      size: 'Large',\n      count: 0,\n    }, \n    {\n      name: 'Kiwi',\n      cost: '$4.99',\n      price: 4.99,\n      image: 'https://images.unsplash.com/photo-1521997888043-aa9c827744f8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=60',\n      season: 'Winter',\n      size: 'Small',\n      count: 0,\n    }, \n    {\n      name: 'Apple',\n      cost: '$1.99',\n      price: 1.99,\n      image: 'https://images.unsplash.com/photo-1560806887-1e4cd0b6cbd6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=60',\n      season: 'Winter',\n      size: 'Medium',\n      count: 0,\n    }, \n    {\n      name: 'Orange',\n      cost: '$3.99',\n      price: 3.99,\n      image: 'https://images.unsplash.com/photo-1536657464919-892534f60d6e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=60',\n      season: 'Spring',\n      size: 'Medium',\n      count: 0,\n    }, \n    {\n      name: 'Carrot',\n      cost: '$2.50',\n      price: 2.50,\n      image: 'https://images.unsplash.com/photo-1582515073490-39981397c445?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=60',\n      season: 'Winter',\n      size: 'Large',\n      count: 0,\n    }, \n  ]  ","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FilteredList from \"./FilteredList\";\nimport products from \"./products\";\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>The Pro-fresh-inal Market </h1>\n        <div className=\"filter-and-sort\">\n        <FilteredList products = {products} > </FilteredList>\n        </div>\n      </div>\n    );\n  }\n\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}